<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.js.dao.warehouse.WarehouseTypeMapper">
  <resultMap id="BaseResultMap" type="com.js.entity.warehouse.WarehouseType">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="type_code" jdbcType="VARCHAR" property="typeCode" />
    <result column="type_name" jdbcType="VARCHAR" property="typeName" />
    <result column="is_special" jdbcType="INTEGER" property="isSpecial" />
    <result column="type_desc" jdbcType="VARCHAR" property="typeDesc" />
    <result column="type_parentid" jdbcType="INTEGER" property="typeParentid" />
    <result column="initial" jdbcType="INTEGER" property="initial" />
  </resultMap>
  <sql id="Base_Column_List">
    id, type_code, type_name, is_special, type_desc, type_parentid, initial
  </sql>

  <sql id="where_sql">
    <if test="param.typeCode != null and param.typeCode != ''">and type_code = #{param.typeCode}</if>
    <if test="param.typeName != null and param.typeName != ''">and type_name = #{param.typeName}</if>
    <if test="param.isSpecial != null">and is_special = #{param.isSpecial}</if>
    <if test="param.typeDesc != null and param.typeDesc != ''">and type_desc = #{param.typeDesc}</if>
    <if test="param.typeParentid != null">and type_parentid = #{param.typeParentid}</if>
    <if test="param.initial != null">and initial = #{param.initial}</if>

  </sql>

  <sql id="order_by_sql">
    <if test="page != null">
      <if test="page.orderBy != null and page.orderBy !=''">
        ORDER BY ${page.orderBy} ${page.order}
      </if>
      <if test="page.start >= 0 and page.rows > 0">
        limit #{page.start}, #{page.rows}
      </if>
    </if>
  </sql>

  <select id="findList" parameterType="com.js.entity.warehouse.WarehouseType" resultMap="BaseResultMap">
    select * from js_warehouse_type
  </select>

  <select id="findById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from js_warehouse_type
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="findPageList" parameterType="map" resultMap="BaseResultMap">
    SELECT * FROM js_warehouse_type
    <where>
      <include refid="where_sql"/>
    </where>
    <include refid="order_by_sql"/>
  </select>

  <select id="findPageListCount" parameterType="com.js.entity.warehouse.WarehouseType" resultType="int">
    SELECT count(*) FROM js_warehouse_type
    <where>
      <include refid="where_sql"/>
    </where>
  </select>

  <delete id="delete" parameterType="java.lang.Integer">
    delete from js_warehouse_type
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <delete id="deleteByIds" parameterType="java.lang.Integer">
    delete from js_warehouse_type
    where id in <foreach collection="array" item="ids" open="(" separator="," close=")">#{ids}</foreach>
  </delete>

  <insert id="insert" parameterType="com.js.entity.warehouse.WarehouseType">
    insert into js_warehouse_type (type_code, type_name,
      is_special, type_desc, type_parentid, 
      initial)
    values (#{typeCode,jdbcType=VARCHAR}, #{typeName,jdbcType=VARCHAR},
      #{isSpecial,jdbcType=INTEGER}, #{typeDesc,jdbcType=VARCHAR}, #{typeParentid,jdbcType=INTEGER}, 
      #{initial,jdbcType=INTEGER})
  </insert>

  <update id="update" parameterType="com.js.entity.warehouse.WarehouseType">
    update js_warehouse_type
    <set>
      <if test="typeCode != null">
        type_code = #{typeCode,jdbcType=VARCHAR},
      </if>
      <if test="typeName != null">
        type_name = #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="isSpecial != null">
        is_special = #{isSpecial,jdbcType=INTEGER},
      </if>
      <if test="typeDesc != null">
        type_desc = #{typeDesc,jdbcType=VARCHAR},
      </if>
      <if test="typeParentid != null">
        type_parentid = #{typeParentid,jdbcType=INTEGER},
      </if>
      <if test="initial != null">
        initial = #{initial,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

</mapper>