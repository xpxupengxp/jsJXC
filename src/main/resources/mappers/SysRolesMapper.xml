<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.js.dao.SysRolesMapper">
  <resultMap id="BaseResultMap" type="com.js.entity.SysRoles">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="rols_desc" jdbcType="VARCHAR" property="rolsDesc" />
    <result column="org" jdbcType="VARCHAR" property="org" />
    <result column="system" jdbcType="VARCHAR" property="system" />
    <result column="object_id" jdbcType="VARCHAR" property="objectId" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>

  <sql id="Base_Column_List">
    id, name, rols_desc, org, system, object_id,status
  </sql>

  <sql id="where_sql">
    <if test="param.id != null">and id = #{param.id}</if>
    <if test="param.name != null">and name like '%'+#{param.name}+'%'</if>
    <if test="param.rolsDesc != null and param.rolsDesc != ''">and rols_desc = #{param.rolsDesc}</if>
    <if test="param.org != null and param.org != ''">and org = #{param.org}</if>
    <if test="param.system != null and param.system != ''">and system = #{param.system}</if>
    <if test="param.objectId != null and param.objectId != ''">and object_id = #{param.objectId}</if>
    <if test="param.status != null">and status = #{param.status}</if>

  </sql>

  <sql id="order_by_sql">
    <if test="page != null">
      <if test="page.orderBy != null and page.orderBy !=''">
        ORDER BY ${page.orderBy} ${page.order}
      </if>
      <if test="page.start >= 0 and page.rows > 0">
        limit #{page.start}, #{page.rows}
      </if>
    </if>
  </sql>

  <select id="findList" parameterType="com.js.entity.SysRoles" resultMap="BaseResultMap">
    select * from js_sys_roles
  </select>

  <select id="findById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from js_sys_roles
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="findPageList" parameterType="map" resultMap="BaseResultMap">
    SELECT * FROM js_sys_roles
    <where>
      <include refid="where_sql"/>
    </where>
    <include refid="order_by_sql"/>
  </select>

  <select id="findPageListCount" parameterType="com.js.entity.SysRoles" resultType="int">
    SELECT count(*) FROM js_sys_roles
    <where>
      <include refid="where_sql"/>
    </where>
  </select>


  <select id="getUsersByRoleId" parameterType="java.lang.Integer" resultType="com.js.entity.SysUsers">
    select u.* from js_sys_roles r
    left join js_sys_user_roles ur on r.id=ur.role_id
    left join js_sys_users u on ur.user_id=u.id
    WHERE r.id=#{id,jdbcType=INTEGER}
  </select>

  <select id="getPermsByRoleId" parameterType="java.lang.Integer" resultType="com.js.entity.OldSysPermission">
    select p.* from js_sys_roles r
    left join js_sys_role_permission rp on r.id=rp.role_id
    left join js_old_sys_permission p on rp.perms_id=p.perms_id
    WHERE r.id=#{id,jdbcType=INTEGER}
  </select>

  <delete id="delete" parameterType="java.lang.Integer">
    delete from js_sys_roles
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.js.entity.SysRoles">
    insert into js_sys_roles (name, rols_desc,
      org, system, object_id,status)
    values (#{name,jdbcType=VARCHAR}, #{rolsDesc,jdbcType=VARCHAR},
      #{org,jdbcType=VARCHAR}, #{system,jdbcType=VARCHAR}, #{objectId,jdbcType=VARCHAR},#{status,jdbcType=INTEGER}
      )
  </insert>

  <update id="update" parameterType="com.js.entity.SysRoles">
    update js_sys_roles
    <set>
      <if test="name != null and name !=''">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="rolsDesc != null and rolsDesc !=''">
        rols_desc = #{rolsDesc,jdbcType=VARCHAR},
      </if>
      <if test="org != null and org !=''">
        org = #{org,jdbcType=VARCHAR},
      </if>
      <if test="system != null and system !=''">
        system = #{system,jdbcType=VARCHAR},
      </if>
      <if test="objectId != null and objectId !=''">
        object_id = #{objectId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>